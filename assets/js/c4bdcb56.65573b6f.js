"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[818],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),f=o,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||a;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5169:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],s={sidebar_position:2},l="Attendances",c={unversionedId:"dev/serverless/attendances",id:"dev/serverless/attendances",isDocsHomePage:!1,title:"Attendances",description:"The attendances registration function should work automatically in the background. It lies in the google cloud platform and is a serverless function triggered from a time trigger each X hours or once per day.",source:"@site/docs/dev/serverless/attendances.md",sourceDirName:"dev/serverless",slug:"/dev/serverless/attendances",permalink:"/documentation/docs/dev/serverless/attendances",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/dev/serverless/attendances.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/documentation/docs/dev/serverless/start"},next:{title:"Get Hybrid Participants",permalink:"/documentation/docs/dev/serverless/hybrid"}},u=[{value:"Workflow",id:"workflow",children:[],level:3},{value:"Environmental Variables",id:"environmental-variables",children:[],level:3},{value:"Code",id:"code",children:[],level:3}],d={toc:u};function p(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"attendances"},"Attendances"),(0,a.kt)("p",null,"The attendances registration function should work automatically in the background. It lies in the google cloud platform and is a serverless function triggered from a time trigger each X hours or once per day."),(0,a.kt)("h3",{id:"workflow"},"Workflow"),(0,a.kt)("p",null,"The workflow is the following:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"the function queries hasura for the current program (semester)."),(0,a.kt)("li",{parentName:"ol"},"with the current program, it fetches all the past session (from program start to today) and the attendance table"),(0,a.kt)("li",{parentName:"ol"},"it fetches all the offline response via limsurvey (this could be also done later, but is to be done only once, all responses are in the same survey)"),(0,a.kt)("li",{parentName:"ol"},"it calculates which sessions are still not checked (there are no results in the attendance table)"),(0,a.kt)("li",{parentName:"ol"},"for each unchecked session, it asks zoom for the list of online participants, filter it and merges it with the offline one (only the one related to the course); it also asks hasura for the registered participants of the related course."),(0,a.kt)("li",{parentName:"ol"},"it matches the participants (merged list online + offline against the registered one from the course)."),(0,a.kt)("li",{parentName:"ol"},"it writes to the attendance table")),(0,a.kt)("h3",{id:"environmental-variables"},"Environmental Variables"),(0,a.kt)("p",null,"It requires a configuration files (",(0,a.kt)("inlineCode",{parentName:"p"},".env"),") with the following variables:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"api_key= #zoom\napi_secret= #zoom\nhasura_admin_secret=\nhasura_url=\nlms_url= #limesurvey url\nlms_user=\nlms_password=\nlms_sID= #surveyID\n")),(0,a.kt)("h3",{id:"code"},"Code"),(0,a.kt)("p",null,"Not deployed yet - soon to be updated"))}p.isMDXComponent=!0}}]);